from aiogram import Router, types
from aiogram.filters import Command
from helpers.database import save_user
from helpers.utils import check_subscription
from helpers.message_manager import delete_previous_message, save_last_message
from settings.config import TG_CHANNEL_URL, TG_GROUP_URL

router = Router()

@router.message(Command("start"))
async def start_message_handler(message: types.Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user_id = message.from_user.id
    first_name = message.from_user.first_name

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    await save_user(message.from_user)

    await send_main_menu(message.bot, user_id, first_name)

@router.callback_query(lambda callback_query: callback_query.data == "start")
async def start_callback_handler(callback_query: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∫–Ω–æ–ø–∫–∏ "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é".
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    user_id = callback_query.from_user.id
    first_name = callback_query.from_user.first_name
    await send_main_menu(callback_query.bot, user_id, first_name)

async def send_main_menu(bot, user_id, first_name):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    await delete_previous_message(bot, user_id)

    is_subscribed = await check_subscription(user_id)
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="üì¶ –ö–∞—Ç–∞–ª–æ–≥", callback_data="catalog_page_1")],
        [types.InlineKeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞", callback_data="cart")],
        [types.InlineKeyboardButton(text="‚ùì FAQ", switch_inline_query_current_chat="")]
    ])

    if is_subscribed:
        sent_message = await bot.send_message(
            chat_id=user_id,
            text=f"{first_name}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ üëã\n\n–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª üëá",
            reply_markup=keyboard
        )
    else:
        keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
            [types.InlineKeyboardButton(text="üîó –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=TG_CHANNEL_URL)],
            [types.InlineKeyboardButton(text="üîó –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≥—Ä—É–ø–ø—É", url=TG_GROUP_URL)]
        ])
        sent_message = await bot.send_message(chat_id=user_id, text=f"‚ùó {first_name}, —Ç—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –∏ –≥—Ä—É–ø–ø—É!\n\n–ü–æ–¥–ø–∏—à–∏—Å—å, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏ /start", reply_markup=keyboard)

    await save_last_message(user_id, sent_message)
